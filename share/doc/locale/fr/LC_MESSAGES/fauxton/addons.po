# 
msgid ""
msgstr ""
"Project-Id-Version: Apache CouchDB 1.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-21 22:51\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../src/fauxton/addons.rst:18
msgid "Writting Addons"
msgstr ""

#: ../../src/fauxton/addons.rst:20
msgid ""
"Addons allow you to extend Fauxton for a specific use case. Usually, they "
"have the following structure::"
msgstr ""

#: ../../src/fauxton/addons.rst:35
msgid "Generating an Addon"
msgstr ""

#: ../../src/fauxton/addons.rst:37
msgid ""
"We have a `grunt-init` template that lets you create a skeleton addon, "
"including all the boiler plate code. Run ``grunt-init tasks/addon`` and "
"answer the questions it asks to create an addon::"
msgstr ""

#: ../../src/fauxton/addons.rst:55
msgid ""
"Once the addon is created add the name to the settings.json file to get it "
"compiled and added on the next install."
msgstr ""

#: ../../src/fauxton/addons.rst:59
msgid "Routes and hooks"
msgstr ""

#: ../../src/fauxton/addons.rst:61
msgid ""
"An addon can insert itself into Fauxton in two ways; via a route or via a "
"hook."
msgstr ""

#: ../../src/fauxton/addons.rst:64
msgid "Routes"
msgstr ""

#: ../../src/fauxton/addons.rst:66
msgid ""
"An addon will override an existing route should one exist, but in all other "
"ways is just a normal backbone `route/view`. This is how you would add a "
"whole new feature."
msgstr ""

#: ../../src/fauxton/addons.rst:71
msgid "Hooks"
msgstr ""

#: ../../src/fauxton/addons.rst:73
msgid ""
"Hooks let you modify/extend an existing feature. They modify a DOM element "
"by selector for a named set of routes, for example:"
msgstr ""

#: ../../src/fauxton/addons.rst:91
msgid ""
"adds the `searchSidebar` callback to `#sidebar-content` for three routes."
msgstr ""

#: ../../src/fauxton/addons.rst:94
msgid "Hello world Addon"
msgstr ""

#: ../../src/fauxton/addons.rst:96
msgid "First create the addon skeleton::"
msgstr ""

#: ../../src/fauxton/addons.rst:111
msgid "In `app/addons/hello/templates/hello.html` place:"
msgstr ""

#: ../../src/fauxton/addons.rst:117
msgid ""
"Next, we'll defined a simple view in `resources.js` (for more complex addons"
" you may want to have a views.js) that renders that template:"
msgstr ""

#: ../../src/fauxton/addons.rst:138
msgid "Then define a route in `routes.js` that the addon is accessible at:"
msgstr ""

#: ../../src/fauxton/addons.rst:171
msgid "Then wire it all together in base.js:"
msgstr ""

#: ../../src/fauxton/addons.rst:194
msgid ""
"Once the code is in place include the add on in your `settings.json` so that"
" it gets included by the `require` task. Your addon is included in one of "
"three ways; a local path, a git URL or a name. Named plugins assume the "
"plugin is in the Fauxton base directory, addons with a git URL will be "
"cloned into the application, local paths will be copied. Addons included "
"from a local path will be cleaned out by the clean task, others are left "
"alone."
msgstr ""
