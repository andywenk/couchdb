# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, The Apache Software Foundation
# This file is distributed under the same license as the Apache CouchDB package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apache CouchDB 1.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-21 23:32\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../src/api/ddoc/views.rst:17
# 8591efffb80e4b1697a1d0328679b405
msgid "``/db/_design/design-doc/_view/view-name``"
msgstr ""

#: ../../src/api/ddoc/views.rst:21
# 11a37af3085e456abfba2fb5c1e17ff2
msgid "Executes the specified view function from the specified design document."
msgstr ""

#: ../../src/api/ddoc/views.rst:27
#: ../../src/api/ddoc/views.rst:66
# 323cc8702fcf4e339caebed06817082f
# 488cc08de5ee47c38fcf2d1970b822ce
msgid ":mimetype:`application/json`"
msgstr ""

#: ../../src/api/ddoc/views.rst:28
# 8f65fa31a9fe4517a49b83a0b7062cd8
msgid ":mimetype:`text/plain`"
msgstr ""

#: ../../src/api/ddoc/views.rst:67
# 70b02e11c9ef4ef89d0ce5dedc9753d8
msgid ":mimetype:`text/plain; charset=utf-8`"
msgstr ""

#: ../../src/api/ddoc/views.rst:83
#: ../../src/api/ddoc/views.rst:135
#: ../../src/api/ddoc/views.rst:324
#: ../../src/api/ddoc/views.rst:452
#: ../../src/api/ddoc/views.rst:655
#: ../../src/api/ddoc/views.rst:724
# a4b944cd5b97469994857ce0339b2027
# bcf26ce3a45c409eb32420bf022a27a5
# 5f6d91c30d85413e8bb6ac0455dea04e
# 7427fb17ae8d4f5d835bf705c7d9f2b0
# db765ad5cc884726b54b53d70d4e2a28
# 958a59b567d946f18c6cd9b9d557868e
msgid "**Request**:"
msgstr ""

#: ../../src/api/ddoc/views.rst:91
#: ../../src/api/ddoc/views.rst:151
#: ../../src/api/ddoc/views.rst:333
#: ../../src/api/ddoc/views.rst:461
#: ../../src/api/ddoc/views.rst:663
#: ../../src/api/ddoc/views.rst:732
# 2255509c92154857bc94f242e4ce6493
# 333b474d1bea4a1f84d45f30c577c13d
# 47c6940ef15244888424ff6db7d8efcb
# 99352fe899314018a3db7e2d152f6d86
# ec828040bc1449ca9098664870676024
# a1e3c9ff02174109bca8b6c951fe127d
msgid "**Response**:"
msgstr ""

#: ../../src/api/ddoc/views.rst:128
# bfe959734c3b4b9e974ca50e8ff20f0e
msgid "Executes the specified view function from the specified design document. Unlike :get:`/{db}/_design/{ddoc}/_view/{view}` for accessing views, the :method:`POST` method supports the specification of explicit keys to be retrieved from the view results. The remainder of the :method:`POST` view functionality is identical to the :get:`/{db}/_design/{ddoc}/_view/{view}` API."
msgstr ""

#: ../../src/api/ddoc/views.rst:184
# 9c16cc48bf7845c399c61431844af9a2
msgid "View Options"
msgstr ""

#: ../../src/api/ddoc/views.rst:186
# 9664caf146f44a1380162bb831461283
msgid "There are two view indexing options that can be defined in a design document as boolean properties of an ``options`` object. Unlike the others querying options, these aren't URL parameters because they take effect when the view index is generated, not when it's accessed:"
msgstr ""

#: ../../src/api/ddoc/views.rst:191
# 8e1eed3d267c41c0a5bd85d3efbd20a9
msgid "**local_seq** (*boolean*): Makes documents' local sequence numbers available to map functions (as a ``_local_seq`` document property)"
msgstr ""

#: ../../src/api/ddoc/views.rst:193
# 7883af3d44724540a675e8b3249055aa
msgid "**include_design** (*boolean*): Allows map functions to be called on design documents as well as regular documents"
msgstr ""

#: ../../src/api/ddoc/views.rst:196
# 95c7cae0afbe4ccda8570b59fcc467cb
msgid "In additional to these options, you may specify :ref:`any other <api/ddoc/view>` with their default value. E.g. having option ``\"include_docs\": true`` will automatically includes document body for view results response. You still may override such by explicitly defining same query parameter name with other value."
msgstr ""

#: ../../src/api/ddoc/views.rst:204
# 3cfab652415d46f898a13c68a4ebfee3
msgid "Querying Views and Indexes"
msgstr ""

#: ../../src/api/ddoc/views.rst:206
# 5669c736fb314b1fbfe6589beb191882
msgid "The definition of a view within a design document also creates an index based on the key information defined within each view. The production and use of the index significantly increases the speed of access and searching or selecting documents from the view."
msgstr ""

#: ../../src/api/ddoc/views.rst:211
# f17cf8dacf564906ab7691b367459c20
msgid "However, the index is not updated when new documents are added or modified in the database. Instead, the index is generated or updated, either when the view is first accessed, or when the view is accessed after a document has been updated. In each case, the index is updated before the view query is executed against the database."
msgstr ""

#: ../../src/api/ddoc/views.rst:217
# 782ede12862f4783b1de8a5ecfb3b8ec
msgid "View indexes are updated incrementally in the following situations:"
msgstr ""

#: ../../src/api/ddoc/views.rst:219
# 2bb68ff837b24d2598ea0fd14ae14b4a
msgid "A new document has been added to the database."
msgstr ""

#: ../../src/api/ddoc/views.rst:221
# d1622673db094062b2e292d3e78afe04
msgid "A document has been deleted from the database."
msgstr ""

#: ../../src/api/ddoc/views.rst:223
# cb643e9daeca4ce7b2fe850bb6eac992
msgid "A document in the database has been updated."
msgstr ""

#: ../../src/api/ddoc/views.rst:225
# 728934392fb74c678713eb50599876fa
msgid "View indexes are rebuilt entirely when the view definition changes. To achieve this, a 'fingerprint' of the view definition is created when the design document is updated. If the fingerprint changes, then the view indexes are entirely rebuilt. This ensures that changes to the view definitions are reflected in the view indexes."
msgstr ""

#: ../../src/api/ddoc/views.rst:232
# 9c9495b9dc9b46b68c134da5d6dffccd
msgid "View index rebuilds occur when one view from the same the view group (i.e. all the views defined within a single a design document) has been determined as needing a rebuild. For example, if if you have a design document with different views, and you update the database, all three view indexes within the design document will be updated."
msgstr ""

#: ../../src/api/ddoc/views.rst:238
# d2559cdd575e4c2097c2ae9744a0714d
msgid "Because the view is updated when it has been queried, it can result in a delay in returned information when the view is accessed, especially if there are a large number of documents in the database and the view index does not exist. There are a number of ways to mitigate, but not completely eliminate, these issues. These include:"
msgstr ""

#: ../../src/api/ddoc/views.rst:244
# 7de3c9dd40664a5793eb8d84ae02322d
msgid "Create the view definition (and associated design documents) on your database before allowing insertion or updates to the documents. If this is allowed while the view is being accessed, the index can be updated incrementally."
msgstr ""

#: ../../src/api/ddoc/views.rst:249
# 9438b3868f4e4449a7599be6d9f15a59
msgid "Manually force a view request from the database. You can do this either before users are allowed to use the view, or you can access the view manually after documents are added or updated."
msgstr ""

#: ../../src/api/ddoc/views.rst:253
# 7499e6545094436db3af0b4ac172a0da
msgid "Use the :ref:`changes feed <api/db/changes>` to monitor for changes to the database and then access the view to force the corresponding view index to be updated."
msgstr ""

#: ../../src/api/ddoc/views.rst:257
# c0e3ec26b1db4bd3bd00ee731b57e94b
msgid "Use a monitor with the :ref:`update notification <update-notifications>` section of the CouchDB configuration file to monitor for changes to your database, and trigger a view query to force the view to be updated."
msgstr ""

#: ../../src/api/ddoc/views.rst:261
# 06b890dcc39043f19cc92be300bb1c45
msgid "None of these can completely eliminate the need for the indexes to be rebuilt or updated when the view is accessed, but they may lessen the effects on end-users of the index update affecting the user experience."
msgstr ""

#: ../../src/api/ddoc/views.rst:265
# 7e044abec4ff4c8c8910a999ccc0e31d
msgid "Another alternative is to allow users to access a 'stale' version of the view index, rather than forcing the index to be updated and displaying the updated results. Using a stale view may not return the latest information, but will return the results of the view query using an existing version of the index."
msgstr ""

#: ../../src/api/ddoc/views.rst:271
# f90461c5e47f47f897ad0446280b09a6
msgid "For example, to access the existing stale view ``by_recipe`` in the ``recipes`` design document:"
msgstr ""

#: ../../src/api/ddoc/views.rst:278
# 9168d3069968484fb00b9d8704a2f9c3
msgid "Accessing a stale view:"
msgstr ""

#: ../../src/api/ddoc/views.rst:280
# a077998b65e94ca6a95ed1589c13f542
msgid "Does not trigger a rebuild of the view indexes, even if there have been changes since the last access."
msgstr ""

#: ../../src/api/ddoc/views.rst:283
# cca89eb29166490ea8d350756cfcbb4e
msgid "Returns the current version of the view index, if a current version exists."
msgstr ""

#: ../../src/api/ddoc/views.rst:286
# ef65ce5ac8b64127bc1868d13d462689
msgid "Returns an empty result set if the given view index does exist."
msgstr ""

#: ../../src/api/ddoc/views.rst:288
# c0776cf611374f979d76df2fa6cc9e94
msgid "As an alternative, you use the ``update_after`` value to the ``stale`` parameter. This causes the view to be returned as a stale view, but for the update process to be triggered after the view information has been returned to the client."
msgstr ""

#: ../../src/api/ddoc/views.rst:293
# 3f647570c15d45268e9e516df839c1a5
msgid "In addition to using stale views, you can also make use of the ``update_seq`` query argument. Using this query argument generates the view information including the update sequence of the database from which the view was generated. The returned value can be compared this to the current update sequence exposed in the database information (returned by :get:`/{db}`)."
msgstr ""

#: ../../src/api/ddoc/views.rst:304
# 41467190c81e4036915ac34bc7d67845
msgid "Sorting Returned Rows"
msgstr ""

#: ../../src/api/ddoc/views.rst:306
# 0f6b0b521f7b477ea770046e5e0d7bab
msgid "Each element within the returned array is sorted using native UTF-8 sorting according to the contents of the key portion of the emitted content. The basic order of output is as follows:"
msgstr ""

#: ../../src/api/ddoc/views.rst:310
# 87647a2c68dc4298af1fa6942ae404b9
msgid "``null``"
msgstr ""

#: ../../src/api/ddoc/views.rst:312
# 3c3425a815d843eda825e8f39b8a8510
msgid "``false``"
msgstr ""

#: ../../src/api/ddoc/views.rst:314
# 20f010abe6c04b568d29760cae6bcc0a
msgid "``true``"
msgstr ""

#: ../../src/api/ddoc/views.rst:316
# f532d73762ae41f999881a0611e6ad18
msgid "Numbers"
msgstr ""

#: ../../src/api/ddoc/views.rst:318
# 4f5a5d44abd64cf898a275088d10dab9
msgid "Text (case sensitive, lowercase first)"
msgstr ""

#: ../../src/api/ddoc/views.rst:320
# 87153093afed4a82baab031965950125
msgid "Arrays (according to the values of each element, in order)"
msgstr ""

#: ../../src/api/ddoc/views.rst:322
# e02ad2fec50948d590f4abd354f754b7
msgid "Objects (according to the values of keys, in key order)"
msgstr ""

#: ../../src/api/ddoc/views.rst:449
# 28196c4186ee48cdb81c6cd5fcf62387
msgid "You can reverse the order of the returned view information by using the ``descending`` query value set to true:"
msgstr ""

#: ../../src/api/ddoc/views.rst:578
# 1878e0d73d21470187560805fb853435
msgid "Sorting order and startkey/endkey"
msgstr ""

#: ../../src/api/ddoc/views.rst:580
# 65da52ebd6624061aff42d2338300b28
msgid "The sorting direction is applied before the filtering applied using the ``startkey`` and ``endkey`` query arguments. For example the following query:"
msgstr ""

#: ../../src/api/ddoc/views.rst:589
# 751ae53e3381489c9cbefb07daaba301
msgid "will operate correctly when listing all the matching entries between ``carrots`` and ``egg``. If the order of output is reversed with the ``descending`` query argument, the view request will return no entries:"
msgstr ""

#: ../../src/api/ddoc/views.rst:606
# f14f0d0e9f73413ab7b980d320c49da0
msgid "The results will be empty because the entries in the view are reversed before the key filter is applied, and therefore the ``endkey`` of “egg” will be seen before the ``startkey`` of “carrots”, resulting in an empty list."
msgstr ""

#: ../../src/api/ddoc/views.rst:611
# 18f37d93e61548c09bddde0dd33b54e7
msgid "Instead, you should reverse the values supplied to the ``startkey`` and ``endkey`` parameters to match the descending sorting applied to the keys. Changing the previous example to:"
msgstr ""

#: ../../src/api/ddoc/views.rst:625
# 7406f3c6f4bb4f64a758ad667d3aeeea
msgid "Raw collation"
msgstr ""

#: ../../src/api/ddoc/views.rst:627
# fa2f2fa09096450193c9fb9413edc326
msgid "By default CouchDB using `ICU`_ driver for sorting view results. It's possible use binary collation instead for faster view builds where Unicode collation is not important."
msgstr ""

#: ../../src/api/ddoc/views.rst:631
# 118ff04f99ec4337be362c67e9986ea2
msgid "To use raw collation add ``\"collation\": \"raw\"`` key-value pair to the design documents ``options`` object at the root level. After that, views will be regenerated and new order applied."
msgstr ""

#: ../../src/api/ddoc/views.rst:637
# 192f976671e7465ea4b52a563642bc23
msgid ":ref:`views/collation`"
msgstr ""

#: ../../src/api/ddoc/views.rst:644
# bd78d01b31b84bc7b49329d5c32e801e
msgid "Using Limits and Skipping Rows"
msgstr ""

#: ../../src/api/ddoc/views.rst:646
# 822dbf55e7e043a08855aac5171dc37e
msgid "By default requestion views result returns all records for it. That's ok when they are small, but this may lead to problems when there are billions of them since the clients might have to read them all and consume all available memory."
msgstr ""

#: ../../src/api/ddoc/views.rst:650
# 8652211f253b4b44ae723d74d7968811
msgid "But it's possible to reduce output result rows by specifying ``limit`` query parameter. For example, retrieving the list of recipes using the ``by_title`` view and limited to 5 returns only 5 records, while there are total 2667 records in view:"
msgstr ""

#: ../../src/api/ddoc/views.rst:722
# 30ec6613485a44c59f83923fff8557ba
msgid "To omit some records you may use ``skip`` query parameter:"
msgstr ""

#: ../../src/api/ddoc/views.rst:777
# 4a934b9c37b54efc990a186c291ce924
msgid "Using ``limit`` and ``skip`` parameters is not recommended for results pagination. Read :ref:`pagination recipe <views/pagination>` why it's so and how to make it better."
msgstr ""

