# 
msgid ""
msgstr ""
"Project-Id-Version: Apache CouchDB 1.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-21 22:51\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../src/config/http.rst:19
msgid "CouchDB HTTP Server"
msgstr ""

#: ../../src/config/http.rst:24
msgid "HTTP Server Options"
msgstr ""

#: ../../src/config/http.rst:30
msgid ""
"The ``true`` value of this option enables `JSONP`_ support (it's ``false`` "
"by default)::"
msgstr ""

#: ../../src/config/http.rst:41
msgid ""
"List of used authentication handlers that used by CouchDB. You may extend "
"them via third-party plugins or remove some of them if you won't let users "
"to use one of provided methods::"
msgstr ""

#: ../../src/config/http.rst:48
msgid "``{couch_httpd_oauth, oauth_authentication_handler}``: handles OAuth;"
msgstr ""

#: ../../src/config/http.rst:49
msgid ""
"``{couch_httpd_auth, cookie_authentication_handler}``: used for Cookie auth;"
msgstr ""

#: ../../src/config/http.rst:50
msgid ""
"``{couch_httpd_auth, proxy_authentication_handler}``: used for Proxy auth;"
msgstr ""

#: ../../src/config/http.rst:51
msgid ""
"``{couch_httpd_auth, default_authentication_handler}``: used for Basic auth;"
msgstr ""

#: ../../src/config/http.rst:52
msgid ""
"``{couch_httpd_auth, null_authentication_handler}``: disables auth. "
"Everlasting `Admin Party`!"
msgstr ""

#: ../../src/config/http.rst:58
msgid "Defines the IP address by which CouchDB will be accessible::"
msgstr ""

#: ../../src/config/http.rst:63
msgid ""
"To let CouchDB listen any available IP address, just setup ``0.0.0.0`` "
"value::"
msgstr ""

#: ../../src/config/http.rst:69
msgid ""
"For IPv6 support you need to set ``::1`` if you want to let CouchDB listen "
"local address::"
msgstr ""

#: ../../src/config/http.rst:75
msgid "or ``::`` for any available::"
msgstr ""

#: ../../src/config/http.rst:83
msgid ""
"Specifies default `timeout` value for :ref:`Changes Feed <changes>` in "
"milliseconds (60000 by default)::"
msgstr ""

#: ../../src/config/http.rst:92
msgid ""
"Sets the configuration modification whitelist. Only whitelisted values may "
"be changed via the :ref:`config API <api/config>`. To allow the admin to "
"change this value over HTTP, remember to include "
"``{httpd,config_whitelist}`` itself. Excluding it from the list would "
"require editing this file to update the whitelist::"
msgstr ""

#: ../../src/config/http.rst:104
msgid "Specifies default HTTP requests handler::"
msgstr ""

#: ../../src/config/http.rst:114
msgid "Controls :ref:`CORS <config/cors>` feature::"
msgstr ""

#: ../../src/config/http.rst:122
msgid ""
"Defines maximum chunk size in bytes for :ref:`_log <api/server/log>` "
"resource::"
msgstr ""

#: ../../src/config/http.rst:131
msgid "Defined the port number to listen::"
msgstr ""

#: ../../src/config/http.rst:136
msgid "To let CouchDB handle any free port, set this option to ``0``::"
msgstr ""

#: ../../src/config/http.rst:141
msgid "After that, CouchDB URI could be located within the URI file."
msgstr ""

#: ../../src/config/http.rst:146
msgid ""
"This option customizes the default function that handles requests to "
":section:`virtual hosts <vhosts>`::"
msgstr ""

#: ../../src/config/http.rst:152
msgid ""
"The specified function take 2 arguments: the Mochiweb request object and the"
" target path."
msgstr ""

#: ../../src/config/http.rst:158
msgid ""
"Server options for the `MochiWeb`_ component of CouchDB can be added to the "
"configuration files::"
msgstr ""

#: ../../src/config/http.rst:169
msgid "This option allow to isolate databases via subdomains::"
msgstr ""

#: ../../src/config/http.rst:177
msgid ""
"The socket options for the listening socket in CouchDB can be specified as a"
" list of tuples. For example::"
msgstr ""

#: ../../src/config/http.rst:183
msgid ""
"The options supported are a subset of full options supported by the TCP/IP "
"stack. A list of the supported options are provided in the `Erlang inet`_ "
"documentation."
msgstr ""

#: ../../src/config/http.rst:192
msgid ""
"List of global handlers that are available for :section:`virtual hosts "
"<vhosts>`::"
msgstr ""

#: ../../src/config/http.rst:201
msgid ""
"The `x_forwarded_host` header (``X-Forwarded-Host`` by default) is used to "
"forward the original value of the ``Host`` header field in case, for "
"example, if a reverse proxy is rewriting the \"Host\" header field to some "
"internal host name before forward the request to CouchDB::"
msgstr ""

#: ../../src/config/http.rst:209
msgid ""
"This header has higher priority above ``Host`` one, if only it exists in the"
" request."
msgstr ""

#: ../../src/config/http.rst:215
msgid ""
"`x_forwarded_proto` header (``X-Forwarder-Proto`` by default) is used for "
"identifying the originating protocol of an HTTP request, since a reverse "
"proxy may communicate with CouchDB instance using HTTP even if the request "
"to the reverse proxy is HTTPS::"
msgstr ""

#: ../../src/config/http.rst:226
msgid ""
"The `x_forwarded_ssl` header (``X-Forwarded-Ssl`` by default) tells CouchDB "
"that it should use the `https` scheme instead of the `http`. Actually, it's "
"a synonym for ``X-Forwarded-Proto: https`` header, but used by some reverse "
"proxies::"
msgstr ""

#: ../../src/config/http.rst:237
msgid "Set this option to trigger basic-auth popup on unauthorized requests::"
msgstr ""

#: ../../src/config/http.rst:246
msgid "Secure Socket Level Options"
msgstr ""

#: ../../src/config/http.rst:250
msgid ""
"CouchDB supports SSL natively. All your secure connection needs can now be "
"served without needing to setup and maintain a separate proxy server that "
"handles SSL."
msgstr ""

#: ../../src/config/http.rst:254
msgid ""
"SSL setup can be tricky, but the configuration in CouchDB was designed to be"
" as easy as possible. All you need is two files; a certificate and a private"
" key. If you bought an official SSL certificate from a certificate "
"authority, both should be in your possession already."
msgstr ""

#: ../../src/config/http.rst:259
msgid ""
"If you just want to try this out and don't want to pay anything upfront, you"
" can create a self-signed certificate. Everything will work the same, but "
"clients will get a warning about an insecure certificate."
msgstr ""

#: ../../src/config/http.rst:263
msgid ""
"You will need the `OpenSSL`_ command line tool installed. It probably "
"already is."
msgstr ""

#: ../../src/config/http.rst:275
msgid ""
"Now, you need to edit CouchDB's configuration, either by editing your "
"``local.ini`` file or using the ``/_config`` API calls or the configuration "
"screen in Futon. Here is what you need to do in ``local.ini``, you can infer"
" what needs doing in the other places."
msgstr ""

#: ../../src/config/http.rst:280
msgid "At first, :option:`enable the HTTPS daemon <daemons/httpsd>`::"
msgstr ""

#: ../../src/config/http.rst:285
msgid "Next, under ``[ssl]`` section setup newly generated certificates::"
msgstr ""

#: ../../src/config/http.rst:291
msgid "For more information please read `certificates HOWTO`_."
msgstr ""

#: ../../src/config/http.rst:293
msgid ""
"Now start (or restart) CouchDB. You should be able to connect to it using "
"HTTPS on port 6984:"
msgstr ""

#: ../../src/config/http.rst:314
msgid ""
"Oh no! What happened?! Remember, clients will notify their users that your "
"certificate is self signed. ``curl`` is the client in this case and it "
"notifies you. Luckily you trust yourself (don't you?) and you can specify "
"the ``-k`` option as the message reads:"
msgstr ""

#: ../../src/config/http.rst:324
msgid "All done."
msgstr ""

#: ../../src/config/http.rst:332
msgid ""
"Path to file containing PEM encoded CA certificates (trusted certificates "
"used for verifying a peer certificate). May be omitted if you do not want to"
" verify the peer::"
msgstr ""

#: ../../src/config/http.rst:342
msgid "Path to a file containing the user's certificate::"
msgstr ""

#: ../../src/config/http.rst:350
msgid "Path to file containing user's private PEM encoded key::"
msgstr ""

#: ../../src/config/http.rst:358
msgid ""
"String containing the user's password. Only used if the private keyfile is "
"password protected::"
msgstr ""

#: ../../src/config/http.rst:367
msgid ""
"Maximum peer certificate depth (must be set even if certificate validation "
"is off)::"
msgstr ""

#: ../../src/config/http.rst:376
msgid ""
"The verification fun (optional) if not specified, the default verification "
"fun will be used::"
msgstr ""

#: ../../src/config/http.rst:385
msgid "Set to `true` to validate peer certificates::"
msgstr ""

#: ../../src/config/http.rst:395
msgid "Cross-Origin Resource Sharing"
msgstr ""

#: ../../src/config/http.rst:401
msgid ""
"`CORS`, or \"Cross-Origin Resource Sharing\", allows a resource such as a "
"web page running JavaScript inside a browser, to make AJAX requests "
"(XMLHttpRequests) to a different domain, without compromising the security "
"of either party."
msgstr ""

#: ../../src/config/http.rst:406
msgid ""
"A typical use case is to have a static website hosted on a CDN make requests"
" to another resource, such as a hosted CouchDB instance. This avoids needing"
" an intermediary proxy, using `JSONP` or similar workarounds to retrieve and"
" host content."
msgstr ""

#: ../../src/config/http.rst:411
msgid ""
"While CouchDB's integrated HTTP server has support for document attachments "
"makes this less of a constraint for pure CouchDB projects, there are many "
"cases where separating the static content from the database access is "
"desirable, and CORS makes this very straightforward."
msgstr ""

#: ../../src/config/http.rst:416
msgid ""
"By supporting CORS functionality, a CouchDB instance can accept direct "
"connections to protected databases and instances, without the browser "
"functionality being blocked due to same-origin constraints. CORS is "
"supported today on over 90% of recent browsers."
msgstr ""

#: ../../src/config/http.rst:421
msgid ""
"CORS support is provided as experimental functionality in 1.3, and as such "
"will need to be enabled specifically in CouchDB's configuration. While all "
"origins are forbidden from making requests by default, support is available "
"for simple requests, preflight requests and per-vhost configuration."
msgstr ""

#: ../../src/config/http.rst:426
msgid ""
"This section requires :option:`httpd/enable_cors` option have ``true`` "
"value::"
msgstr ""

#: ../../src/config/http.rst:435
msgid ""
"By default, neither authentication headers nor cookies are included in "
"requests and responses. To do so requires both setting "
"``XmlHttpRequest.withCredentials = true`` on the request object in the "
"browser and enabling credentials support in CouchDB."
msgstr ""

#: ../../src/config/http.rst:445
msgid ""
"CouchDB will respond to a credentials-enabled CORS request with an "
"additional header, ``Access-Control-Allow-Credentials=true``."
msgstr ""

#: ../../src/config/http.rst:451
msgid ""
"List of origins separated by a comma, ``*`` means accept all. You can’t set "
"``origins = *`` and ``credentials = true`` option at the same time::"
msgstr ""

#: ../../src/config/http.rst:458
msgid ""
"Access can be restricted by protocol, host and optionally by port. Origins "
"must follow the scheme: http://example.com:80::"
msgstr ""

#: ../../src/config/http.rst:464
msgid ""
"Note that by default, no origins are accepted. You must define them "
"explicitly."
msgstr ""

#: ../../src/config/http.rst:470
msgid "List of accepted headers separated by a comma::"
msgstr ""

#: ../../src/config/http.rst:478
msgid "List of accepted methods::"
msgstr ""

#: ../../src/config/http.rst:485
msgid ""
"Original JIRA `implementation ticket "
"<https://issues.apache.org/jira/browse/COUCHDB-431>`_"
msgstr ""

#: ../../src/config/http.rst:487
msgid "Standards and References:"
msgstr ""

#: ../../src/config/http.rst:489
msgid "IETF RFCs relating to methods: :rfc:`2618`, :rfc:`2817`, :rfc:`5789`"
msgstr ""

#: ../../src/config/http.rst:490
msgid "IETF RFC for Web Origins: :rfc:`6454`"
msgstr ""

#: ../../src/config/http.rst:491
msgid "W3C `CORS standard <http://www.w3.org/TR/cors>`_"
msgstr ""

#: ../../src/config/http.rst:493
msgid "Mozilla Developer Network Resources:"
msgstr ""

#: ../../src/config/http.rst:495
msgid ""
"`Same origin policy for URIs <https://developer.mozilla.org/en-US/docs/Same-"
"origin_policy_for_file:_URIs>`_"
msgstr ""

#: ../../src/config/http.rst:496
msgid ""
"`HTTP Access Control "
"<https://developer.mozilla.org/En/HTTP_access_control>`_"
msgstr ""

#: ../../src/config/http.rst:497
msgid ""
"`Server-side Access Control <https://developer.mozilla.org/En/Server-"
"Side_Access_Control>`_"
msgstr ""

#: ../../src/config/http.rst:498
msgid ""
"`Javascript same origin policy <https://developer.mozilla.org/en-"
"US/docs/Same_origin_policy_for_JavaScript>`_"
msgstr ""

#: ../../src/config/http.rst:500
msgid "Client-side CORS support and usage:"
msgstr ""

#: ../../src/config/http.rst:502
msgid "`CORS browser support matrix <http://caniuse.com/cors>`_"
msgstr ""

#: ../../src/config/http.rst:503
msgid "`COS tutorial <http://www.html5rocks.com/en/tutorials/cors/>`_"
msgstr ""

#: ../../src/config/http.rst:504
msgid ""
"`XHR with CORS <http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-"
"with-cors/>`_"
msgstr ""

#: ../../src/config/http.rst:508
msgid "Per Virtual Host Configuration"
msgstr ""

#: ../../src/config/http.rst:510
msgid ""
"To set the options for a :section:`vhosts`, you will need to create a "
"section with the vhost name prefixed by ``cors:``. Example case for the "
"vhost `example.com`::"
msgstr ""

#: ../../src/config/http.rst:528
msgid "Virtual Hosts"
msgstr ""

#: ../../src/config/http.rst:532
msgid ""
"CouchDB can map requests to different locations based on the ``Host`` "
"header, even if they arrive on the some inbound IP address."
msgstr ""

#: ../../src/config/http.rst:535
msgid ""
"This allows different virtual hosts on the same machine to map to different "
"databases or design documents, etc. The most common use case is to map a "
"virtual host to a :ref:`Rewrite Handler <api/ddoc/rewrite>`, to provide full"
" control over the application's URIs."
msgstr ""

#: ../../src/config/http.rst:540
msgid ""
"To add a virtual host, add a `CNAME` pointer to the DNS for your domain "
"name. For development and testing, it is sufficient to add an entry in the "
"hosts file, typically `/etc/hosts`` on Unix-like operating systems:"
msgstr ""

#: ../../src/config/http.rst:549
msgid "Test that this is working:"
msgstr ""

#: ../../src/config/http.rst:558
msgid ""
"Finally, add an entry to your :ref:`configuration file <config>` in the "
"``[vhosts]`` section::"
msgstr ""

#: ../../src/config/http.rst:565
msgid ""
"If your CouchDB is listening on the the default HTTP port (80), or is "
"sitting behind a proxy, then you don't need to specify a port number in the "
"`vhost` key."
msgstr ""

#: ../../src/config/http.rst:569
msgid ""
"The first line will rewrite the request to display the content of the "
"`example` database. This rule works only if the ``Host`` header is "
"``couchdb.local`` and won't work for `CNAMEs`. The second rule, on the other"
" hand, matches all `CNAMEs` to `example` db, so that both "
"`www.couchdb.local` and `db.couchdb.local` will work."
msgstr ""

#: ../../src/config/http.rst:577
msgid "Rewriting Hosts to a Path"
msgstr ""

#: ../../src/config/http.rst:579
msgid ""
"Like in the :ref:`_rewrite <api/ddoc/rewrite>` handler you can match some "
"variable and use them to create the target path. Some examples::"
msgstr ""

#: ../../src/config/http.rst:588
msgid ""
"The first rule passes the wildcard as `dbname`. The second one does the "
"same, but uses a variable name. And the third one allows you to use any URL "
"with `ddocname` in any database with `dbname`."
msgstr ""

#: ../../src/config/http.rst:592
msgid ""
"You could also change the default function to handle request by changing the"
" setting :option:`httpd/redirect_vhost_handler`."
msgstr ""
