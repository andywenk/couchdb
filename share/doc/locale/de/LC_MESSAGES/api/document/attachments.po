# 
msgid ""
msgstr ""
"Project-Id-Version: Apache CouchDB 1.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-21 22:51\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../src/api/document/attachments.rst:17
msgid "``/db/doc/attachment``"
msgstr ""

#: ../../src/api/document/attachments.rst:21
msgid ""
"Returns the HTTP headers containing a minimal amount of information about "
"the specified attachment. The method supports the same query arguments as "
"the :get:`/{db}/{docid}/{attname}` method, but only the header information "
"(including attachment size, encoding and the MD5 hash as an :header:`ETag`),"
" is returned."
msgstr ""

#: ../../src/api/document/attachments.rst:49
#: ../../src/api/document/attachments.rst:146
#: ../../src/api/document/attachments.rst:218
msgid "**Request**:"
msgstr ""

#: ../../src/api/document/attachments.rst:56
#: ../../src/api/document/attachments.rst:164
#: ../../src/api/document/attachments.rst:236
msgid "**Response**:"
msgstr ""

#: ../../src/api/document/attachments.rst:74
msgid ""
"Returns the file attachment associated with the document. The raw data of "
"the associated attachment is returned (just as if you were accessing a "
"static file. The returned :header:`Content-Type` will be the same as the "
"content type set when the document attachment was submitted into the "
"database."
msgstr ""

#: ../../src/api/document/attachments.rst:96
msgid "Stored content"
msgstr ""

#: ../../src/api/document/attachments.rst:106
msgid ""
"Uploads the supplied content as an attachment to the specified document. The"
" attachment name provided must be a URL encoded string. You must also supply"
" either the ``rev`` query argument or the :header:`If-Match` HTTP header for"
" validation, and the HTTP headers (to set the attachment content type)."
msgstr ""

#: ../../src/api/document/attachments.rst:112
msgid ""
"If case when uploading an attachment using an existing attachment name, "
"CouchDB will update the corresponding stored content of the database. Since "
"you must supply the revision information to add an attachment to the "
"document, this serves as validation to update the existing attachment."
msgstr ""

#: ../../src/api/document/attachments.rst:118
msgid ""
"Uploading an attachment updates the corresponding document revision. "
"Revisions are tracked for the parent document, not individual attachments."
msgstr ""

#: ../../src/api/document/attachments.rst:186
msgid ""
"Deletes the attachment ``attachment`` of the specified ``doc``. You must "
"supply the ``rev`` query parameter or :header:`If-Match` with the current "
"revision to delete the attachment."
msgstr ""

#: ../../src/api/document/attachments.rst:191
msgid ""
"Deleting an attachment updates the corresponding document revision. "
"Revisions are tracked for the parent document, not individual attachments."
msgstr ""

#: ../../src/api/document/attachments.rst:196
#: ../../src/api/document/attachments.rst:205
msgid ":mimetype:`application/json`"
msgstr ""

#: ../../src/api/document/attachments.rst:197
msgid ":mimetype:`text/plain`"
msgstr ""

#: ../../src/api/document/attachments.rst:206
msgid ":mimetype:`text/plain; charset=utf-8`"
msgstr ""

#: ../../src/api/document/attachments.rst:226
msgid ""
"Alternatively, instead of ``rev`` query parameter you may use :header:`If-"
"Match` header:"
msgstr ""

#: ../../src/api/document/attachments.rst:258
msgid "HTTP Range Requests"
msgstr ""

#: ../../src/api/document/attachments.rst:260
msgid ""
"HTTP allows you to specify byte ranges for requests. This allows the "
"implementation of resumable downloads and skippable audio and video streams "
"alike. This is available for all attachments inside CouchDB."
msgstr ""

#: ../../src/api/document/attachments.rst:264
msgid ""
"This is just a real quick run through how this looks under the hood. "
"Usually, you will have larger binary files to serve from CouchDB, like MP3s "
"and videos, but to make things a little more obvious, I use a text file here"
" (Note that I use the :mimetype:`application/octet-stream` :header`Content-"
"Type` instead of :mimetype:`text/plain`)."
msgstr ""

#: ../../src/api/document/attachments.rst:275
msgid ""
"Now let's store this text file as an attachment in CouchDB. First, we create"
" a database:"
msgstr ""

#: ../../src/api/document/attachments.rst:283
msgid "Then we create a new document and the file attachment in one go:"
msgstr ""

#: ../../src/api/document/attachments.rst:291
msgid "Now we can request the whole file easily:"
msgstr ""

#: ../../src/api/document/attachments.rst:298
msgid "But say we only want the first 13 bytes:"
msgstr ""

#: ../../src/api/document/attachments.rst:306
msgid ""
"HTTP supports many ways to specify single and even multiple byte ranges. "
"Read all about it in :rfc:`2616#section-14.27`."
msgstr ""

#: ../../src/api/document/attachments.rst:310
msgid ""
"Databases that have been created with CouchDB 1.0.2 or earlier will support "
"range requests in |version|, but they are using a less-optimal algorithm. If"
" you plan to make heavy use of this feature, make sure to compact your "
"database with CouchDB |version| to take advantage of a better algorithm to "
"find byte ranges."
msgstr ""
